# If you come from bash you might have to change your $PATH.
export MPLBACKEND="MacOSX"
export PATH="/usr/local/bin:$PATH"
export PATH="$PATH:/Applications/Visual\ Studio\ Code.app/Contents/Resources/app/bin"
export PATH="$PATH:/usr/local/opt/ruby/bin"
export PATH="$PATH:/usr/local/lib/ruby/gems/3.0.0/bin"
export GOPATH="$HOME/.go"

alias gits="git status"
alias commit="git commit"
alias add="git add"
alias push="git push"
alias pull="git pull"
alias vim="nvim"
alias vimdiff="nvim -d"
export EDITOR=nvim



if command -v pyenv 1>/dev/null 2>&1; then
  eval "$(pyenv init -)"
fi

export PATH="$HOME/.poetry/bin:$PATH"
export PYTHON_CONFIGURE_OPTS="--enable-shared"


pdfcompress ()
{
   gs -q -dNOPAUSE -dBATCH -dSAFER -sDEVICE=pdfwrite -dCompatibilityLevel=1.3 -dPDFSETTINGS=/screen -dEmbedAllFonts=true -dSubsetFonts=true -dColorImageDownsampleType=/Bicubic -dColorImageResolution=144 -dGrayImageDownsampleType=/Bicubic -dGrayImageResolution=144 -dMonoImageDownsampleType=/Bicubic -dMonoImageResolution=144 -sOutputFile=$1.compressed.pdf $1; 
}

pdfcompressstrong ()
{
   gs -q -dNOPAUSE -dBATCH -dSAFER -sDEVICE=pdfwrite -sColorConversionStrategy=Gray -dProcessColorModel=/DeviceGray -dCompatibilityLevel=1.3 -dPDFSETTINGS=/screen -dEmbedAllFonts=true -dSubsetFonts=true -dColorImageDownsampleType=/Bicubic -dColorImageResolution=100 -dGrayImageDownsampleType=/Bicubic -dGrayImageResolution=100 -dMonoImageDownsampleType=/Bicubic -dMonoImageResolution=100 -sOutputFile=$1.compressed.pdf $1; 
}

mergepdfs () { 
  gs -q -dNOPAUSE -dBATCH -sDEVICE=pdfwrite -sOutputFile="$1" "${@:2}"
}


changes(){
  for dir in $HOME/Development/*/     # list directories absolute path
  do
      if [[ -d "$dir/.git" ]]; then
          if [[ -n  `git -C $dir status --porcelain` ]]; then
              echo "Uncommited changes in directory:  $dir"
              continue;
          fi
          if [[ -n `git -C $dir log --branches --not --remotes` ]]; then
              echo "Unpushed changes in directory: $dir "
          fi
      fi
  done
}


listenv(){
 ls  "$HOME/.envs"
}


rmenv(){
  if [ -z "$1" ]; then
    echo "No name for venv supplied"
    return 1
  fi
  echo "Remove environment at $HOME/.envs/$1 (y/n) ? "
  read answer
  if [ "$answer" != "${answer#[Yy]}" ] ;then
    echo rm -r $HOME/.envs/$1
  else
    echo No
  fi
}


mkenv(){
 if [ -z "$1" ]; then
   echo "No name for venv supplied"
   return 1
 fi
 mkdir -p "$HOME/.envs"
 python3 -m venv "$HOME/.envs/$1"
 echo "Venv created at $HOME/.envs/$1"
 activate $1
 pip install ipython jupyter
 deactivate
}


activate(){
 if [ -z "$1" ]; then
   echo "No name for venv supplied"
   return 1
 fi
 if [ ! -d "$HOME/.envs/$1" ]; then
   echo "No venv with that name"
   return 1
 fi
 source "$HOME/.envs/$1/bin/activate"
}

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"



# Set name of the theme to load. Optionally, if you set this to "random"
# it'll load a random theme each time that oh-my-zsh is loaded.
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="spaceship"


export SPACESHIP_GIT_STATUS_ADDED="%F{yellow}+%F{red}"
export SPACESHIP_GIT_STATUS_UNTRACKED="%F{blue}?%F{red}"
export SPACESHIP_GIT_STATUS_DELETED="%F{green}x%F{red}"
export SPACESHIP_GIT_STATUS_MODIFIED="%F{yellow}!%F{yellow}"
export SPACESHIP_GIT_STATUS_PREFIX=" "
export SPACESHIP_GIT_STATUS_SUFFIX=" "
export SPACESHIP_TIME_SHOW=true
export SPACESHIP_BATTERY_THRESHOLD=100

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(git)
plugins=(virtualenv)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/rsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/Users/kai/.sdkman"
[[ -s "/Users/kai/.sdkman/bin/sdkman-init.sh" ]] && source "/Users/kai/.sdkman/bin/sdkman-init.sh"
